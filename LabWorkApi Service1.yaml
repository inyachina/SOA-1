openapi: 3.0.3
info:
  title: LabWork API
  description: |-
    Service oriented architecture Lab1
  version: 1.0.0
  license:
    name: Report link
    url: 'https://docs.google.com/document/d/1OFOUjKmVXs_EV1YSgSl1qN2sRwAZeqoU/edit?usp=sharing&ouid=103372480510558009952&rtpof=true&sd=true'

servers:
  - url: https://se.ifmo.ru/~s283945/soa
tags:
  - name: lab
    description: Everything about labs
  - name: lab additional
    description: Extended lab funcionality
paths:
  /labs:
    get:
      tags:
        - lab
      summary: Get all labs 
      description: Get all labs with sorting, filtefing, pagging, sizing
      operationId: getLabs
      parameters:
        - name: size
          in: query
          description: Set size of page
          explode: true
          schema:
            type: string
            default: 20
        - name: page
          in: query
          description: Set page number
          explode: true
          schema:
            type: string
            default: 1
        - name: sort
          in: query
          description: Set sort field rule
          explode: true
          schema:
            type: array
            items: 
              type: string
              maxItems: 1
              enum: [name, x, y, creationDate, minimalPoint, personalQualitiesMaximum, description,difficulty, disciplineName, disciplineLectureHours, disciplineSelfStudyHours]
        - name: asceding
          in: query
          description: Set sort order rule
          explode: true
          schema:
            type: boolean
            default: true
        - name: filter
          in: query
          description: You need to specify a field, the default value is "name".
           You should specify "regex", the collection will be filtered by the specified field and by the specified regular expression.
          explode: true
          schema:
            type: object
            properties:
              field:
                type: string
                default: name
              regex: 
                type: string
          
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Lab' 
        '204':
          description: Empty collection
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post: 
      tags:
        - lab
      summary: Add new lab
      operationId: addLab
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lab'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Lab'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lab'   
        '405':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'  
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /labs/{id}:
    get:
      tags:
        - lab
      summary: Get an existing lab
      description: Get an existing lab by Id
      operationId: getLab
      parameters:
        - name: id
          in: path
          description: lab's id that need to be readden
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lab'   
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'     
        '404':
          description: Lab not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    put:
      tags:
        - lab
      summary: Update an existing lab
      description: Update an existing lab by Id
      operationId: updateLab
      parameters:
        - name: id
          in: path
          description: lab's id that need to be updated
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lab'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Lab'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lab'   
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'     
        '404':
          description: Lab not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'   
        '405':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'  
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
        - lab
      summary: Delete an existing lab
      description: Delete an existing lab by Id
      operationId: deleteLab
      parameters:
        - name: id
          in: path
          description: lab's id that need to be deleted
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation 
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'     
        '404':
          description: Lab not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse' 
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'  
  /labs/average/minimal_point :
    get:
      tags:
        - lab additional
      summary: Get an average Minimal Point of labs
      operationId: averageMinimalPoint

      responses:
        '200':
          description: Average Minimal Point
          content:
            application/json:
              schema:
                type: object
                properties:
                  averageMinimalPoint:
                    type: integer
        '204':
          description: Empty collection
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'     
        '404':
          description: There is not a single lab
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse' 
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /labs/group_by/personal_qualities:
    get:
      tags:
        - lab additional
      summary: Group labs by personal qualities maximum 
      operationId: groupByPersonalQualities

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  groupName:
                    type: string
                  items:
                    type: array
                    items: 
                      type: array
                      items:
                        $ref: '#/components/schemas/Lab'   
        '204':
          description: Empty collection
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse' 
        '404':  
          description: There is not a single lab
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /labs/fiter_by/description:
    get:
      tags:
        - lab additional
      summary: Find all labs that description includes subsring
      operationId: fiterByDescription
      parameters:
        - name: filterRegex
          in: query
          description: Set regex that filters all labs by description
          schema:
            type: string
        - name: substring
          in: query
          description: Set substring that filters all labs by description
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lab'   
        '204':
          description: Empty collection
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/ApiResponse'
        '400':  
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse' 
        '404':  
          description: There is not a single lab
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
components:
  schemas:
    Lab:
      type: object
      required: 
        - name
        - coordinates
        - creationDate
        - minimalPoint
        - personalQualitiesMaximum
        - description
        - difficulty
        - discipline
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Service oriented architecture
        coordinates:
           $ref: '#/components/schemas/Coordinates'
        creationDate:
          type: string
          format: date-time
          example: "Wed Mar 27 08:22:02 IST 2015"
        minimalPoint:
          type: integer
          format: int64
          example: 6
          description: value should me more then 0
        personalQualitiesMaximum:
          type: number
          format: float
          example: 2
          description: value should me more then 0
        difficulty:
          $ref: '#/components/schemas/Difficulty'
        discipline:
          $ref: '#/components/schemas/Discipline'
      xml:
        name: order
    Coordinates:
      type: object
      required: 
        - x
      properties:
        x:
          type: number
          format: double
          example: 1.2
          description: value should me less then 295
        y:
          type: number
          format: double
          example: 1.2
          description: value should me less then 850
    Difficulty:
      type: string
      enum: 
        - VERY_EASY
        - NORMAL
        - VERY_HARD
        - IMPOSSIBLE
        - INSANE
    Discipline :
      type: object
      required:
        - name
        - selfStudyHours
      properties:
        name:
          type: string
          example: Service Oriented Architecture
        lectureHours:
          type: integer
          format: int32
          example: 2
        selfStudyHours:
          type: integer
          format: int32
          example: 2
      xml:
        name: address
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          default: 0
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    Lab:
      description: Lab object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Lab'
        application/xml:
          schema:
            $ref: '#/components/schemas/Lab'
